#! /bin/bash
###############################################################################
# deb-cryptlvm-nokvm
#
# automated install of remotely unlocked encrypted rootfs systems
# 
# Copyright (C) 2014 nipil (nipil@users.noreply.github.com)
# 
# This program is free software; you can redistribute it and/or
#Â modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
###############################################################################

###############################################################################
# load configuration file
#
source template.conf

###############################################################################
# show usage
#

usage()
{
	echo -ne "Usage: ${0} operation [args]\n" \
		"\tconfig\n" \
		"\tprereq\n" \
		"\tpartition\n" \
		"\tcrypt\n" \
		"\tlvm\n" \
		"\tusage\n"

}

###############################################################################
# dump loaded configuration
#

config()
{

	DCN="DCN_DISK DCN_FSTYPE DCN_VG_NAME \
		DCN_BOOTFS_SIZE DCN_ROOTFS_SIZE DCN_SWAP_SIZE \
		DCN_BOOTSTRAP_MIRROR DCN_BOOTSTRAP_ARCH DCN_BOOTSTRAP_RELEASE \
		DCN_INSTALL_RECOMMENDS DCN_INSTALL_ETCKEEPER DCN_HOST_NAME \
		DCN_HOST_IFACE DCN_HOST_IP DCN_HOST_MASK DCN_HOST_GW \
		DCN_SSH_PORT_PREBOOT DCN_SSH_PORT_BOOTED DCN_SSH_AUTHKEYS_SRCFILE"

	for i in ${DCN}; do
		echo "${i}=${!i}"
	done

	echo "DCN_PARTITIONS=("
	for i in ${DCN_PARTITIONS[@]}; do
		echo ${i}
	done
	echo ")"

}

###############################################################################
# verify that the required tools are available
#

prereq()
{

	PREREQ="parted mkfs.ext4 cryptsetup pvcreate vgcreate lvcreate mkswap \
		mkdir mount swapon chmod grep awk debootstrap chroot umount swapoff \
		vgchange"

	for i in ${PREREQ}; do
		j=`which ${i}`
		if [[ ! -x ${j} ]]; then
			echo "${i} not found"
			exit 1
		else
			echo "found ${i} at ${j}"
		fi
	done

}

###############################################################################
# partition physical disk
#

partition()
{

	parted -s /dev/${DCN_DISK} mklabel msdos
	parted -a optimal -s /dev/${DCN_DISK} mkpart primary 1M $DCN_BOOTFS_SIZE
	parted -a optimal -s /dev/${DCN_DISK} mkpart primary $DCN_BOOTFS_SIZE -- -1s
	parted -s /dev/${DCN_DISK} set 1 boot on
	parted -s --list

}

###############################################################################
# setup crypt block device
#

crypt()
{

	cryptsetup luksFormat /dev/${DCN_DISK}2
	cryptsetup luksOpen /dev/${DCN_DISK}2 ${DCN_DISK}2_crypt

}

###############################################################################
# setup lvm (physical volumes, volume group, and logical volumes)
#

lvm()
{

	pvcreate /dev/mapper/${DCN_DISK}2_crypt
	vgcreate $DCN_VG_NAME /dev/mapper/${DCN_DISK}2_crypt

	lvcreate -L $DCN_ROOTFS_SIZE -n rootfs $DCN_VG_NAME
	lvcreate -L $DCN_SWAP_SIZE -n swap $DCN_VG_NAME

	for i in ${DCN_PARTITIONS[@]}; do
		DCN_LV_NAME=`echo $i | awk -F, '{ print $1 }'`
		DCN_SIZE_TYPE=`echo $i | awk -F, '{ print $2 }'`
		DCN_SIZE_AMOUNT=`echo $i | awk -F, '{ print $3 }'`
		lvcreate --${DCN_SIZE_TYPE} ${DCN_SIZE_AMOUNT} \
			-n $DCN_LV_NAME $DCN_VG_NAME
	done

}

###############################################################################
# main part
#

case "${1}" in
	usage)
		usage
		exit 0
		;;
	config)
		config
		exit 0
		;;
	prereq)
		prereq
		exit 0
		;;
	partition)
		partition
		exit 0
		;;
	crypt)
		crypt
		exit 0
		;;
	lvm)
		lvm
		exit 0
		;;
	*)
		usage
		exit 0
		;;
esac

